sequenceDiagram
    actor User
    participant Frontend as FE (React/Next.js)
    participant Backend as API (Node.js Routes)
    participant OpenAI
    participant HuggingFace as HF APIs
    participant SupabaseDB as DB (PostgreSQL)

    box "Flow 1: Model Comparison"
        User->>FE: 1. Select models & prompts
        FE->>API: 2. POST /api/match with recipe
        par
            API->>OpenAI: 3a. Run model A
            OpenAI-->>API: 4a. Return output A
        and
            API->>HF: 3b. Run model B (Inference API)
            HF-->>API: 4b. Return output B
        end
        API->>DB: 5. Store match results & recipe in 'matches' table
        DB-->>API: 6. Return generated share_id
        API-->>FE: 7. Return outputs & share_id
        FE-->>User: 8. Display side-by-side results

        User->>FE: 9. Select a winner for the match
        FE->>API: 10. POST /api/match/:share_id/score
        API->>DB: 11. Update 'scoring' field in matches table
    end

    box "Flow 2: Share & Remix"
        User->>FE: 1. Open /share/[share_id] URL
        FE->>API: 2. GET /api/match/:share_id
        API->>DB: 3. Fetch match data by share_id
        DB-->>API: 4. Return match data
        API-->>FE: 5. Return full recipe & results
        FE-->>User: 6. Display shared results page
    end

    box "Flow 3: Notebook Generation"
        User->>FE: 1. Click 'Download Notebook'
        FE->>API: 2. GET /api/notebook?hf_model=...
        API->>HF: 3. Fetch model metadata & README (Model API)
        HF-->>API: 4. Return model info
        Note over API: 5. Generate .ipynb file from internal template
        API-->>FE: 6. Return file for download
        FE-->>User: 7. Prompt user to save .ipynb file
    end
